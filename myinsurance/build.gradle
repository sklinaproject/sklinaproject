plugins {
	id 'org.springframework.boot' version '2.2.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'sk.lina'
version = '0.0.1-SNAPSHOT'
//java.sourceCompatibility = JavaVersion.VERSION_1_8
java.sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {

	implementation('org.springframework.cloud:spring-cloud-starter-stream-kafka')

	//Production ready features to help you monitor and manage your application
	implementation('org.springframework.boot:spring-boot-starter-actuator')

	//Java Persistence API including spring-data-jpa, spring-orm and Hibernate
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')

	//Exposing Spring Data repositories over REST via spring-data-rest-webmvc
	implementation('org.springframework.boot:spring-boot-starter-data-rest')

	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'com.h2database:h2'
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3"
	implementation "org.mariadb.jdbc:mariadb-java-client"
	implementation group: 'com.googlecode.log4jdbc', name: 'log4jdbc', version: '1.2'
	compileOnly 'org.projectlombok:lombok'

	//2.2.8.Release  에는 없네
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:Hoxton.RELEASE")
	}
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
